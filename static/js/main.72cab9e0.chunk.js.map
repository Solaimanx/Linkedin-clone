{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase.js","Header.js","Sidebar.js","InputOption.js","Post.js","Feed.js","Widgets.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","Icon","title","avatar","onClick","useSelector","className","Avatar","src","photoUrl","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","dispatch","useDispatch","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","pageName","pageNotification","logo","recentItem","topic","style","height","width","displayName","InputOption","color","Post","forwardRef","ref","description","message","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","ViewDayIcon","Widgets","newsArticles","heading","subtitle","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","Placeholder","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","App","onAuthStateChanged","configureStore","reducer","UserReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72cab9e0.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    }, \r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n// selecters \r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;","import React from 'react'\nimport './HeaderOption.css' \n\nimport { Avatar } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\n\n\nfunction HeaderOption({ Icon, title, avatar, onClick }) { // this is an \n    \n    const user = useSelector(selectUser);\n     \n    return (\n       <div onClick={onClick} className=\"headerOption\">\n           {Icon && \n           <Icon className=\"headerOption__icon\" />}\n           {avatar &&\n           <Avatar src={user?.photoUrl}  className=\"headerOption__icon\">\n               {user?.email[0]}\n           </Avatar>\n\n           \n\n           }\n\n           <h3 className=\"headerOption__title\">{title}</h3>\n       </div>\n    )\n}\n\nexport default HeaderOption; ","import firebase from \"firebase\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDGWwnK85oIdOLFydzy3zls7iiphNN1etI\",\n  authDomain: \"linkedin-clone-34f99.firebaseapp.com\",\n  projectId: \"linkedin-clone-34f99\",\n  storageBucket: \"linkedin-clone-34f99.appspot.com\",\n  messagingSenderId: \"669965437839\",\n  appId: \"1:669965437839:web:11656b5cc9f7fad6b899fa\",\n  measurementId: \"G-560KMNHSSS\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import React from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport \"./Header.css\";\nimport HeaderOption from \"./HeaderOption\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\n\n\n\nfunction Header() {\n  // dispatch mean enable the  login and logout system from userSlice\n  const dispatch = useDispatch();\n\n \n\n  \n\n\n\n  //using onClick menas firing put the logoutOfApp funtion\n  const logoutOfApp = () => {\n    dispatch(logout());\n    auth.signOut();\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <img\n          src=\"https://cdn.worldvectorlogo.com/logos/linkedin-icon-2.svg\"\n          alt=\"\"\n        />\n        <div className=\"header__search\">\n          <SearchIcon />\n          <input placeholder=\"search\" type=\"text\" />\n        </div>\n      </div>\n      <div className=\"header__right\">\n        <HeaderOption Icon={HomeIcon} title=\"Home\" />\n        <HeaderOption Icon={SupervisorAccountIcon} title=\"My Network\" />\n        <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\n        <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\n        <HeaderOption Icon={NotificationsIcon} title=\"Notifications\" />\n        <HeaderOption onClick={logoutOfApp} avatar={true}  title=\"Me\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./Sidebar.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport Edevelopmark from \"./assets/edevelopmark.png\"\n\n\n\nfunction Sidebar() {\n  const user = useSelector(selectUser);\n\n  const recentItem = (topic) => (\n    <div className=\"sidebar__recentItem\">\n      <span className=\"sidebar__hash\">#</span>\n      <p>{topic}</p>\n    </div>\n  );\n\n  const page = ( pageName , pageNotification, logo ) => (\n    <div className=\"sidebar__page\">\n        <img src={logo} />\n        <div className=\"sidebar__pageProfile\">\n        <h3>{pageName}</h3>\n        <p>{pageNotification}</p>\n        </div>\n      </div>\n  )\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__top\">\n        <img\n          src=\"https://media-exp1.licdn.com/dms/image/C5116AQEKBOpYvo31hw/profile-displaybackgroundimage-shrink_350_1400/0/1585119048034?e=1617235200&v=beta&t=XPjVAs9_GupGdP0KsL8n4iNXRhiiHHCOJVrliX14Tow\"\n          alt=\"\"\n        />\n        <Avatar\n          src={user?.photoUrl}\n          style={{ height: \"65px\", width: \"65px\" }}\n          className=\"sidebar__avatar\"\n        >\n          {user?.email[0]}\n        </Avatar>\n        <h2>{user.displayName}</h2>\n        <h5>{user.email} </h5>\n      </div>\n      <div className=\"sidebar__stats\">\n        <div className=\"sidebar__stat\">\n          <p>Who viewed you</p>\n          <p className=\"sidebar__statNumber\">8,089</p>\n        </div>\n        <div className=\"sidebar__stat\">\n          <p>Views on post</p>\n          <p className=\"sidebar__statNumber\">3,089</p>\n        </div>\n      </div>\n\n      <div className=\"sidebar__upbottom\">\n        <p>My page</p>\n        {page(\"Edevelopmark\", \"Page notifications\", \"./assets/edevelopmark.png\")}\n      </div>\n\n\n      <div className=\"sidebar__bottom\">\n        <p>Recent</p>\n        {recentItem(\"reactjs\")}\n        {recentItem(\"webdeveloper\")}\n        {recentItem(\"webdesign\")}\n        {recentItem(\"developer\")}\n        {recentItem(\"softwareengineering\")}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./InputOption.css\";\n\nfunction InputOption({ Icon, title, color }) {\n  return (\n    <div className=\"inputOption\">\n      <Icon style={{color: color }}/>\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nexport default InputOption;\n","import React, { forwardRef } from \"react\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport InputOption from \"./InputOption\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\n\nconst Post = forwardRef( ( { name, description, message, photoUrl }, ref ) =>  {\n  return (\n    <div ref={ref}  className=\"post\">\n      <div className=\"post__header\">\n        <Avatar src={photoUrl}>\n          {name[0]}\n        </Avatar>\n        <div className=\"post__info\">\n          <h2>{name}</h2>\n          <p>{description}</p>\n          \n        </div>\n      </div> \n      <div className=\"post__body\">\n        <p>{message}</p>\n      </div>\n      <div className=\"post__button\">\n        <InputOption Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\" />\n        <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\n        <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n        <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n      </div>\n    </div>\n  );\n} )\n\nexport default Post;\n","import React, { useState, useEffect } from \"react\";\nimport InputOption from \"./InputOption\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport \"./Feed.css\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport ViewDayIcon from \"@material-ui/icons/ViewDay\";\nimport Post from \"./Post\";\nimport { db } from \"./firebase\";\nimport firebase from \"firebase\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\n\nimport FlipMove from \"react-flip-move\";\n\nfunction Feed() {\n  const user = useSelector(selectUser);\n\n  // usestate will hold store the input + post data for that moment\n  const [input, setInput] = useState([\"\"]);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n  }, []);\n\n  const sendPost = (e) => {\n    {\n      /* once the button click this event will happen  \n      that's mean input 'text' going to push to the realtime listen (useEffect)collection\n      list of things going to add in the database \n      */\n    }\n    e.preventDefault();\n    db.collection(\"posts\").add({\n      name: user.displayName,\n      description: user.email,\n      message: input,\n      photoUrl: user.photoUrl || \"\",\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feed__inputContainer\">\n        <div className=\"feed__input\">\n          <CreateIcon />\n          <form>\n            {/* this input will store the data to \"input usestate\" by \n            everything we type it's firing up an event and pushing to setInput */}\n            <input\n              placeholder=\"Start a Post\"\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n            />\n            {/* post button below */}\n            <button onClick={sendPost} type=\"submit\">\n              Send\n            </button>\n          </form>\n        </div>\n        <div className=\"feed__inputOption\">\n          <InputOption Icon={ImageIcon} title=\"photo\" color=\"#70b5f9\" />\n          <InputOption Icon={SubscriptionsIcon} title=\"Video\" color=\"#e7a33e\" />\n          <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#c0cbcd\" />\n          <InputOption\n            Icon={ViewDayIcon}\n            title=\"Write article\"\n            color=\"#7fc15e\"\n          />\n        </div>\n      </div>\n      \n      <FlipMove>\n        {posts.map(({ id, data: { name, description, message, photoUrl } }) => (\n          <Post\n            key={id}\n            name={name}\n            description={description}\n            message={message}\n            photoUrl={photoUrl}\n          />\n        ))}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default Feed;\n","import React from \"react\";\nimport \"./Widgets.css\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\n\nfunction Widgets() {\n  const newsArticles = (heading, subtitle) => (\n    <div className=\"widgets__article\">\n      <div className=\"widgets__articleLeft\">\n        <FiberManualRecordIcon />\n      </div>\n      <div className=\"widgets__articleRight\">\n        <h4>{heading}</h4>\n        <p>{subtitle}</p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"widgets\">\n      <div className=\"widgets__header\">\n        <h2>Linkedin News</h2>\n        <InfoIcon />\n      </div>\n      {(newsArticles(\"React is back \" , \"Top news - 999 readers\"))}\n      {(newsArticles(\"React is back \" , \"Top news - 999 readers\"))}\n      {(newsArticles(\"React is back \" , \"Top news - 999 readers\"))}\n      {(newsArticles(\"React is back \" , \"Top news - 999 readers\"))}\n      {(newsArticles(\"React is back \" , \"Top news - 999 readers\"))}\n      {(newsArticles(\"React is back \" , \"Top news - 999 readers\"))}\n    </div>\n  );\n}\n\nexport default Widgets;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\nimport \"./Login.css\";\n\nfunction Login() {\n  // useState to track if there a data on this input + or store the input data in state so we can pass the data in firebase\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [profilePic, setProfilePic] = useState(\"\");\n  // dispatch will push the login info to the database in firebase\n  const dispatch = useDispatch();\n\n  // This event will happen after clicking on \"signIn\" button ( because we are using onClick)\n  const loginToApp = (e) => {\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(email, password)\n    .then((userAuth) => {\n      dispatch(\n        login({\n          email: userAuth.user.email,\n          uid: userAuth.user.uid,\n          displayName: userAuth.user.displayName,\n          profileUrl: userAuth.user.photoURL,\n        })\n      );\n      \n    }).catch(error => alert(error));\n  };\n  //\n  const register = () => {\n    if (!name) {\n      return alert(\"Please enter a full Name!\");\n    }\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        userAuth.user\n          .updateProfile({\n            displayName: name,\n            photoURL: profilePic,\n          })\n          .then(() => {\n            dispatch(\n              login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: name,\n                photoUrl: profilePic,\n              })\n            );\n          });\n      })\n      .catch((error) => alert(error));\n  };\n\n  return (\n    <div className=\"login\">\n      <img src=\"https://cdn.worldvectorlogo.com/logos/linkedin.svg\" alt=\"\" />\n      <form>\n        <input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          Placeholder=\"Full Name (required if registering\"\n          type=\"text\"\n        />\n        <input\n          value={profilePic}\n          onChange={(e) => setProfilePic(e.target.value)}\n          Placeholder=\"Profile pic URL (optional) \"\n          type=\"email\"\n        />\n        <input\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          Placeholder=\"Email\"\n          type=\"text\"\n        />\n        <input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          Placeholder=\"password\"\n          type=\"password\"\n        />\n\n        <button onClick={loginToApp}>Sign In</button>\n      </form>\n      <p>\n        Not a member ?{\"  \"}\n        <span className=\"Login__register\" onClick={register}>\n          Register Now\n        </span>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Feed from \"./Feed\";\r\nimport Widgets from \"./Widgets\";\r\nimport { useSelector , useDispatch } from \"react-redux\";\r\nimport { login, logout, selectUser } from \"./features/userSlice\";\r\nimport Login from \"./Login\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(userAuth => {\r\n       if (userAuth){\r\n         //user is logged in \r\n         dispatch((login({\r\n          email : userAuth.email,\r\n          uid: userAuth.uid,\r\n          displayName: userAuth.displayName,\r\n          photoUrl: userAuth.photoURL,\r\n         })))\r\n\r\n       } else {\r\n         //user is logged out\r\n         dispatch(logout());\r\n       }\r\n    })\r\n\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header /> \r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app__body\">\r\n          <Sidebar />\r\n          <Feed />\r\n          <Widgets />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport UserReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: UserReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}